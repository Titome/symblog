<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20120319232447 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
        
        $this->addSql("ALTER TABLE film_acteur DROP FOREIGN KEY FK_8108EE68DA6F574A");
        $this->addSql("ALTER TABLE article_tag DROP FOREIGN KEY FK_919694F97294869C");
        $this->addSql("ALTER TABLE Film DROP FOREIGN KEY FK_2276111CBCF5E72D");
        $this->addSql("ALTER TABLE film_acteur DROP FOREIGN KEY FK_8108EE68567F5183");
        $this->addSql("ALTER TABLE article_tag DROP FOREIGN KEY FK_919694F9BAD26311");
        $this->addSql("ALTER TABLE desk_comment DROP FOREIGN KEY FK_3754E6F871F9DF5E");
        $this->addSql("DROP TABLE Acteur");
        $this->addSql("DROP TABLE Article");
        $this->addSql("DROP TABLE Categorie");
        $this->addSql("DROP TABLE Film");
        $this->addSql("DROP TABLE Tag");
        $this->addSql("DROP TABLE article_tag");
        $this->addSql("DROP TABLE desk");
        $this->addSql("DROP TABLE desk_comment");
        $this->addSql("DROP TABLE film_acteur");
        $this->addSql("DROP TABLE sdz_user");
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
        
        $this->addSql("CREATE TABLE Acteur (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(255) NOT NULL, prenom VARCHAR(255) NOT NULL, dateNaissance DATE NOT NULL, sexe VARCHAR(1) NOT NULL, PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE Article (id INT AUTO_INCREMENT NOT NULL, date DATETIME NOT NULL, titre VARCHAR(255) NOT NULL, contenu LONGTEXT NOT NULL, auteur VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_CD8737FAFF7747B4 (titre), PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE Categorie (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE Film (id INT AUTO_INCREMENT NOT NULL, categorie_id INT DEFAULT NULL, titre VARCHAR(255) NOT NULL, description VARCHAR(500) NOT NULL, INDEX IDX_2276111CBCF5E72D (categorie_id), PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE Tag (id INT AUTO_INCREMENT NOT NULL, nom VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE article_tag (article_id INT NOT NULL, tag_id INT NOT NULL, INDEX IDX_919694F97294869C (article_id), INDEX IDX_919694F9BAD26311 (tag_id), PRIMARY KEY(article_id, tag_id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE desk (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, summary LONGTEXT NOT NULL, description LONGTEXT NOT NULL, note NUMERIC(10, 0) DEFAULT NULL, vote_count INT DEFAULT NULL, created_at DATETIME NOT NULL, update_at DATETIME DEFAULT NULL, is_enabled TINYINT(1) NOT NULL, PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE desk_comment (id INT AUTO_INCREMENT NOT NULL, desk_id INT DEFAULT NULL, description LONGTEXT NOT NULL, submission_ip VARCHAR(32) NOT NULL, created_at DATETIME NOT NULL, INDEX IDX_3754E6F871F9DF5E (desk_id), PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE film_acteur (film_id INT NOT NULL, acteur_id INT NOT NULL, INDEX IDX_8108EE68567F5183 (film_id), INDEX IDX_8108EE68DA6F574A (acteur_id), PRIMARY KEY(film_id, acteur_id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE sdz_user (id INT AUTO_INCREMENT NOT NULL, username VARCHAR(255) NOT NULL, username_canonical VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, email_canonical VARCHAR(255) NOT NULL, enabled TINYINT(1) NOT NULL, salt VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, last_login DATETIME DEFAULT NULL, locked TINYINT(1) NOT NULL, expired TINYINT(1) NOT NULL, expires_at DATETIME DEFAULT NULL, confirmation_token VARCHAR(255) DEFAULT NULL, password_requested_at DATETIME DEFAULT NULL, roles LONGTEXT NOT NULL COMMENT '(DC2Type:array)', credentials_expired TINYINT(1) NOT NULL, credentials_expire_at DATETIME DEFAULT NULL, UNIQUE INDEX UNIQ_84295E0492FC23A8 (username_canonical), UNIQUE INDEX UNIQ_84295E04A0D96FBF (email_canonical), PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("ALTER TABLE Film ADD CONSTRAINT FK_2276111CBCF5E72D FOREIGN KEY (categorie_id) REFERENCES Categorie(id)");
        $this->addSql("ALTER TABLE article_tag ADD CONSTRAINT FK_919694F97294869C FOREIGN KEY (article_id) REFERENCES Article(id) ON DELETE CASCADE");
        $this->addSql("ALTER TABLE article_tag ADD CONSTRAINT FK_919694F9BAD26311 FOREIGN KEY (tag_id) REFERENCES Tag(id) ON DELETE CASCADE");
        $this->addSql("ALTER TABLE desk_comment ADD CONSTRAINT FK_3754E6F871F9DF5E FOREIGN KEY (desk_id) REFERENCES desk(id)");
        $this->addSql("ALTER TABLE film_acteur ADD CONSTRAINT FK_8108EE68567F5183 FOREIGN KEY (film_id) REFERENCES Film(id) ON DELETE CASCADE");
        $this->addSql("ALTER TABLE film_acteur ADD CONSTRAINT FK_8108EE68DA6F574A FOREIGN KEY (acteur_id) REFERENCES Acteur(id) ON DELETE CASCADE");
    }
}
